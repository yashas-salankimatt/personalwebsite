import React from "react";
import { useRouter } from "next/router";
import Menu from "../../../../components/Menu";
import Link from "next/link";

function urs_404(props) {
	const router = useRouter();
	const rgbaColor = "rgba(76, 29, 149, .6)";
	const textColor = "text-purple-900";
	const buttonColor = "bg-purple-200";

	const imageDivStyle = "1rem 1rem 0.25rem " + rgbaColor;

	return (
		<div style={{ overflow: "auto" }} className="flex flex-col max-h-full">
			{router.pathname != "/projects" &&
				router.pathname != "/about" &&
				router.pathname != "/experience" && <Menu></Menu>}
			<div className="flex flex-col items-center max-w-full p-8">
				<a className={"text-3xl font-bold font-sans " + textColor}>
					Finishing my System to Revise Environment Occupancy Maps in Real Time
				</a>
				{(router.pathname == "/projects" ||
					router.pathname == "/about" ||
					router.pathname == "/experience") && (
					<Link href="/project/software/urs/urs_404">
						<a
							target="_blank"
							className={
								"mt-4 text-lg font-semibold font-sans p-2 rounded-md " +
								buttonColor +
								" " +
								textColor
							}
						>
							Click to open page in new tab
						</a>
					</Link>
				)}
				<div
					className="max-w-lg mt-4 mb-8 rounded-2xl "
					style={{ boxShadow: imageDivStyle }}
				>
					<img
						src="/assets/images/projects/software/urs/rosbotpicture.png"
						width="auto"
						height="auto"
						alt="main photo"
						className="rounded-2xl"
					></img>
				</div>

				<iframe
					src="https://www.youtube.com/embed/sd0dRmPlTRY?rel=0"
					height={360}
					frameBorder="0"
					allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
					allowFullScreen
				></iframe>
				<a className={"text-xl font-normal font-sans my-4 " + textColor}>
					ECEN 404 Mapping Brief Demo
				</a>
				<iframe
					src="https://www.youtube.com/embed/t--rqz0HZvo?rel=0"
					height={360}
					frameBorder="0"
					allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
					allowFullScreen
				></iframe>
				<a className={"text-xl font-normal font-sans my-4 " + textColor}>
					ECEN 404 Localization and Remapping Brief Demo
				</a>
				<div className="flex flex-col max-w-5xl mt-8">
					<a className={"text-xl font-normal font-sans mt-4 " + textColor}>
						This is a research project done for the Undergraduate Research
						Scholars program at Texas A&M University. This project is also my
						senior capstone project for ECEN 403 and 404 at Texas A&M
						University.
					</a>
					<a className={"text-xl font-normal font-sans mt-4 " + textColor}>
						The problem trying to be solved here is that robots currently
						commonly have a relatively poor understanding and perception of
						small indoor spaces. They often can't remember the small changes to
						indoor environments like furniture moving as people use them and put
						them back in place or doors changing positions. To solve these
						problems currently many simpler robotic systems employ static map
						generation and localization systems and then add obstacle avoidance
						systems on top of that to move through changed environments.
					</a>
					<a className={"text-xl font-normal font-sans mt-4 " + textColor}>
						Last semester, I had developed a model to remap environments in
						simulation that I was planning to implement onto a real robot
						system. However, upon trying to run the code from simulation on the
						actual robot platform, I found that the data received from the
						actual robot and the map generated was far too unreliable to use the
						method that I had developed the previous semester. Thus, I had to
						think of another approach that would work with the inaccuracies and
						limitations of the relatively inexpensive robot system used in this
						project.
					</a>
					<a className={"text-xl font-normal font-sans mt-4 " + textColor}>
						This new approach involves generating an initial map of an indoor
						system as a base using SLAM. Then, upon wake, the robot localizes
						itself to the generated map using a probabilistic localization
						system and then runs another instance of SLAM to continue mapping
						the environment as it perceives it now. Then, using the now known
						location of the robot in the ground truth map, the robot can
						selectively remap and update the first ground truth map with the new
						data generated by the new SLAM instance.
					</a>
					<a className={"text-xl font-normal font-sans mt-4 " + textColor}>
						Since this method makes no assumptions about the reliability of the
						robot system besides that it will be able to generate a map and then
						simply have reliable enough data to localize to that map again, this
						method of remapping works much better than the approach developed
						last semester. This approach of taking a locally mapped instance of
						the environment and updating a much larger map can be used in many
						other types of robotic systems, using a myriad of other sensors,
						mapping systems, and localization systems.
					</a>
					<a className={"text-xl font-normal font-sans mt-4 " + textColor}>
						More information about this project, the approach and the results
						can be found in the subsystems report section of my capstone final
						report, linked below.
					</a>
				</div>
				<Link href="/assets/documents/ECEN404Report.pdf">
					<a
						target="_blank"
						className={
							"mt-4 text-lg font-semibold font-sans p-2 rounded-md " +
							buttonColor +
							" " +
							textColor
						}
					>
						URS Capstone Report
					</a>
				</Link>
				<Link href="https://github.com/yashas-salankimatt/URS-Project">
					<a
						target="_blank"
						className={
							"mt-4 text-lg text-center font-semibold font-sans p-2 rounded-md " +
							buttonColor +
							" " +
							textColor
						}
					>
						Github Repo for Project
					</a>
				</Link>
				<Link href="https://launch.tamu.edu/Undergraduate-Research/URS">
					<a
						target="_blank"
						className={
							"mt-4 text-lg text-center font-semibold font-sans p-2 rounded-md " +
							buttonColor +
							" " +
							textColor
						}
					>
						URS Program Website
					</a>
				</Link>
			</div>
		</div>
	);
}

export default urs_404;
